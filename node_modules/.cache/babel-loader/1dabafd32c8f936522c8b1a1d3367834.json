{"ast":null,"code":"var _jsxFileName = \"/Users/sireenakhin/Desktop/Weather_Checker/src/components/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport FormatDate from \"./FormatDate\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Weather = props => {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n\n  function handleResponse(response) {\n    console.log(response.data);\n    setWeatherData({\n      ready: true,\n      temperature: Math.round(response.data.main.temp),\n      city: response.data.name,\n      description: response.data.weather[0].description,\n      sunrise: response.data.sys.sunrise,\n      sunset: response.data.sys.sunset,\n      date: new Date(response.data.dt * 1000)\n    });\n  }\n\n  const search = () => {\n    const apiKey = \"7e0a2a9bd62699b486b833f59a096759\";\n    const apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  };\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-9\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"search\",\n              placeholder: \"Enter a city..\",\n              className: \"form-control\",\n              autoFocus: \"on\",\n              onChange: handleCityChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Search\",\n              className: \"btn btn-primary w-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecast, {\n        coordinates: weatherData.coordinates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  } else {\n    search();\n    return \"Loading...\";\n  }\n};\n\n_s(Weather, \"tUtfTt5AWoQL1bRls7ZkwlkTJP4=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/sireenakhin/Desktop/Weather_Checker/src/components/Weather.js"],"names":["React","useState","axios","FormatDate","WeatherInfo","Weather","props","weatherData","setWeatherData","ready","handleResponse","response","console","log","data","temperature","Math","round","main","temp","city","name","description","weather","sunrise","sys","sunset","date","Date","dt","search","apiKey","apiUrl","defaultCity","get","then","handleSubmit","handleCityChange","coordinates"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC;AAAEQ,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA9C;;AAEA,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAN,IAAAA,cAAc,CAAC;AACbC,MAAAA,KAAK,EAAE,IADM;AAEbM,MAAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAWN,QAAQ,CAACG,IAAT,CAAcI,IAAd,CAAmBC,IAA9B,CAFA;AAGbC,MAAAA,IAAI,EAAET,QAAQ,CAACG,IAAT,CAAcO,IAHP;AAIbC,MAAAA,WAAW,EAAEX,QAAQ,CAACG,IAAT,CAAcS,OAAd,CAAsB,CAAtB,EAAyBD,WAJzB;AAKbE,MAAAA,OAAO,EAAEb,QAAQ,CAACG,IAAT,CAAcW,GAAd,CAAkBD,OALd;AAMbE,MAAAA,MAAM,EAAEf,QAAQ,CAACG,IAAT,CAAcW,GAAd,CAAkBC,MANb;AAObC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASjB,QAAQ,CAACG,IAAT,CAAce,EAAd,GAAmB,IAA5B;AAPO,KAAD,CAAd;AASD;;AAED,QAAMC,MAAM,GAAG,MAAM;AACnB,UAAMC,MAAM,GAAG,kCAAf;AACA,UAAMC,MAAM,GAAI,oDAAmD1B,KAAK,CAAC2B,WAAY,UAASF,MAAO,eAArG;AACA7B,IAAAA,KAAK,CAACgC,GAAN,CAAUF,MAAV,EAAkBG,IAAlB,CAAuBzB,cAAvB;AACD,GAJD;;AAMA,MAAIH,WAAW,CAACE,KAAhB,EAAuB;AACrB,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAE2B,YAAhB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,WAAW,EAAC,gBAFd;AAGE,cAAA,SAAS,EAAC,cAHZ;AAIE,cAAA,SAAS,EAAC,IAJZ;AAKE,cAAA,QAAQ,EAAEC;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,KAAK,EAAC,QAFR;AAGE,cAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAqBE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAE9B;AAAnB;AAAA;AAAA;AAAA;AAAA,cArBF,eAsBE,QAAC,eAAD;AAAiB,QAAA,WAAW,EAAEA,WAAW,CAAC+B;AAA1C;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD,GA3BD,MA2BO;AACLR,IAAAA,MAAM;AACN,WAAO,YAAP;AACD;AACF,CArDD;;GAAMzB,O;;KAAAA,O;AAuDN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport FormatDate from \"./FormatDate\";\nimport WeatherInfo from \"./WeatherInfo\";\n\nconst Weather = (props) => {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n\n  function handleResponse(response) {\n    console.log(response.data);\n    setWeatherData({\n      ready: true,\n      temperature: Math.round(response.data.main.temp),\n      city: response.data.name,\n      description: response.data.weather[0].description,\n      sunrise: response.data.sys.sunrise,\n      sunset: response.data.sys.sunset,\n      date: new Date(response.data.dt * 1000),\n    });\n  }\n\n  const search = () => {\n    const apiKey = \"7e0a2a9bd62699b486b833f59a096759\";\n    const apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  };\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"Weather\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-9\">\n              <input\n                type=\"search\"\n                placeholder=\"Enter a city..\"\n                className=\"form-control\"\n                autoFocus=\"on\"\n                onChange={handleCityChange}\n              />\n            </div>\n            <div className=\"col-3\">\n              <input\n                type=\"submit\"\n                value=\"Search\"\n                className=\"btn btn-primary w-100\"\n              />\n            </div>\n          </div>\n        </form>\n        <WeatherInfo data={weatherData} />\n        <WeatherForecast coordinates={weatherData.coordinates} />\n      </div>\n    );\n  } else {\n    search();\n    return \"Loading...\";\n  }\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}