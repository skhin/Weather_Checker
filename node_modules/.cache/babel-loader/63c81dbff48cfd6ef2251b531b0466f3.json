{"ast":null,"code":"var _jsxFileName = \"/Users/sireenakhin/Desktop/Weather_Checker/src/components/FormattedDate.js\";\nimport React from \"react\";\nimport WeatherInfoCard from \"./WeatherInfoCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormattedDate = props => {\n  let now = new Date();\n  let days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n  let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nove\", \"Dec\"];\n  let day = days[now.getDay()];\n  let month = months[now.getMonth()];\n  let date = now.getDate(); ///////////////////////////////////////////\n  // Time\n\n  let minutes = props.date.getMinutes();\n\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  let hours = props.date.getHours();\n\n  if (hours < 12) {\n    hours = `0${hours}:${minutes}am`;\n  } else if (hours > 12 && hours < 24) {\n    hours = `${hours - 12}:${minutes}pm`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-date\",\n      children: [day, \", \", date, \" \", month]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-time\",\n      children: hours\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = FormattedDate;\nexport default FormattedDate;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormattedDate\");","map":{"version":3,"sources":["/Users/sireenakhin/Desktop/Weather_Checker/src/components/FormattedDate.js"],"names":["React","WeatherInfoCard","FormattedDate","props","now","Date","days","months","day","getDay","month","getMonth","date","getDate","minutes","getMinutes","hours","getHours"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,MAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,MAAIC,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAAX;AACA,MAAIC,MAAM,GAAG,CACX,KADW,EAEX,KAFW,EAGX,KAHW,EAIX,KAJW,EAKX,KALW,EAMX,KANW,EAOX,KAPW,EAQX,KARW,EASX,KATW,EAUX,KAVW,EAWX,MAXW,EAYX,KAZW,CAAb;AAeA,MAAIC,GAAG,GAAGF,IAAI,CAACF,GAAG,CAACK,MAAJ,EAAD,CAAd;AACA,MAAIC,KAAK,GAAGH,MAAM,CAACH,GAAG,CAACO,QAAJ,EAAD,CAAlB;AACA,MAAIC,IAAI,GAAGR,GAAG,CAACS,OAAJ,EAAX,CApB+B,CAsB/B;AAEA;;AACA,MAAIC,OAAO,GAAGX,KAAK,CAACS,IAAN,CAAWG,UAAX,EAAd;;AACA,MAAID,OAAO,GAAG,EAAd,EAAkB;AAChBA,IAAAA,OAAO,GAAI,IAAGA,OAAQ,EAAtB;AACD;;AAED,MAAIE,KAAK,GAAGb,KAAK,CAACS,IAAN,CAAWK,QAAX,EAAZ;;AACA,MAAID,KAAK,GAAG,EAAZ,EAAgB;AACdA,IAAAA,KAAK,GAAI,IAAGA,KAAM,IAAGF,OAAQ,IAA7B;AACD,GAFD,MAEO,IAAIE,KAAK,GAAG,EAAR,IAAcA,KAAK,GAAG,EAA1B,EAA8B;AACnCA,IAAAA,KAAK,GAAI,GAAEA,KAAK,GAAG,EAAG,IAAGF,OAAQ,IAAjC;AACD;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACGN,GADH,QACUI,IADV,OACiBF,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAA4BM;AAA5B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD,CA7CD;;KAAMd,a;AA+CN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport WeatherInfoCard from \"./WeatherInfoCard\";\n\nconst FormattedDate = (props) => {\n  let now = new Date();\n  let days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n  let months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nove\",\n    \"Dec\",\n  ];\n\n  let day = days[now.getDay()];\n  let month = months[now.getMonth()];\n  let date = now.getDate();\n\n  ///////////////////////////////////////////\n\n  // Time\n  let minutes = props.date.getMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  let hours = props.date.getHours();\n  if (hours < 12) {\n    hours = `0${hours}:${minutes}am`;\n  } else if (hours > 12 && hours < 24) {\n    hours = `${hours - 12}:${minutes}pm`;\n  }\n\n  return (\n    <>\n      <div className=\"city-date\">\n        {day}, {date} {month}\n      </div>\n      <div className=\"city-time\">{hours}</div>\n    </>\n  );\n};\n\nexport default FormattedDate;\n"]},"metadata":{},"sourceType":"module"}