{"ast":null,"code":"var _jsxFileName = \"/Users/sireenakhin/Desktop/Weather_Checker/src/components/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./WeatherForecast.css\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    console.log(response.data);\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    console.log(forecast);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.map(function (dailyForecast, index) {\n          if (index < 5) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n                data: dailyForecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  } else {\n    let apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\";\n    let lon = props.coordinates.lon;\n    let lat = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n\n_s(WeatherForecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/sireenakhin/Desktop/Weather_Checker/src/components/Forecast.js"],"names":["React","useState","useEffect","axios","WeatherForecastDay","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","coordinates","handleResponse","response","console","log","data","daily","map","dailyForecast","index","apiKey","lon","lat","apiUrl","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,uBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFQ,EAEN,CAACF,KAAK,CAACK,WAAP,CAFM,CAAT;;AAIA,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAN,IAAAA,WAAW,CAACG,QAAQ,CAACG,IAAT,CAAcC,KAAf,CAAX;AACAT,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,MAAID,MAAJ,EAAY;AACVO,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACGA,QAAQ,CAACS,GAAT,CAAa,UAAUC,aAAV,EAAyBC,KAAzB,EAAgC;AAC5C,cAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,gCACE;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACE,QAAC,kBAAD;AAAoB,gBAAA,IAAI,EAAED;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF,eAA0BC,KAA1B;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WAND,MAMO;AACL,mBAAO,IAAP;AACD;AACF,SAVA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD,GAnBD,MAmBO;AACL,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,GAAG,GAAGhB,KAAK,CAACK,WAAN,CAAkBW,GAA5B;AACA,QAAIC,GAAG,GAAGjB,KAAK,CAACK,WAAN,CAAkBY,GAA5B;AACA,QAAIC,MAAM,GAAI,uDAAsDD,GAAI,QAAOD,GAAI,UAASD,MAAO,eAAnG;AAEAlB,IAAAA,KAAK,CAACsB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBd,cAAvB;AAEA,WAAO,IAAP;AACD;AACF;;GA3CuBP,e;;KAAAA,e","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport \"./WeatherForecast.css\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\n\nexport default function WeatherForecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    console.log(response.data);\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    console.log(forecast);\n    return (\n      <div className=\"WeatherForecast\">\n        <div className=\"row\">\n          {forecast.map(function (dailyForecast, index) {\n            if (index < 5) {\n              return (\n                <div className=\"col\" key={index}>\n                  <WeatherForecastDay data={dailyForecast} />\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    let apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\";\n    let lon = props.coordinates.lon;\n    let lat = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n\n    axios.get(apiUrl).then(handleResponse);\n\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}