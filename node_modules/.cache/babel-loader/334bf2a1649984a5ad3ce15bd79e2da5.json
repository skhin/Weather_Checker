{"ast":null,"code":"var _jsxFileName = \"/Users/sireenakhin/Desktop/Weather_Checker/src/components/TemperatureConversion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TemperatureConversion = props => {\n  _s();\n\n  const [unit, setUnit] = useState(\"celsius\");\n\n  function showCelsius(event) {\n    event.preventDefault();\n    setUnit(\"celsius\");\n  }\n\n  function showFahrenheit(event) {\n    event.preventDefault();\n    setUnit(\"fahrenheit\");\n  }\n\n  if (unit === \"celsius\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherTemperature\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"current-temperature\",\n        children: Math.round(props.celsius)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unit-buttons\",\n        children: [\"\\xB0C|\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          onClick: showFahrenheit,\n          children: \"\\xB0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  } else {\n    let fahrenheit = props.celsius * 9 / 5 + 32;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherTemperature\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"current-temperature\",\n        children: Math.round(fahrenheit)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unit-buttons\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          onClick: showCelsius,\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), \"|\\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(TemperatureConversion, \"n67kjtGMfKwprJ+mcpfrwxWUTPs=\");\n\n_c = TemperatureConversion;\nexport default TemperatureConversion;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemperatureConversion\");","map":{"version":3,"sources":["/Users/sireenakhin/Desktop/Weather_Checker/src/components/TemperatureConversion.js"],"names":["React","useState","TemperatureConversion","props","unit","setUnit","showCelsius","event","preventDefault","showFahrenheit","Math","round","celsius","fahrenheit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;AAAA;;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,SAAD,CAAhC;;AAEA,WAASK,WAAT,CAAqBC,KAArB,EAA4B;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,OAAO,CAAC,SAAD,CAAP;AACD;;AAED,WAASI,cAAT,CAAwBF,KAAxB,EAA+B;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,OAAO,CAAC,YAAD,CAAP;AACD;;AAED,MAAID,IAAI,KAAK,SAAb,EAAwB;AACtB,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAM,QAAA,EAAE,EAAC,qBAAT;AAAA,kBAAgCM,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACS,OAAjB;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA,0CAEE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAEH,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAZD,MAYO;AACL,QAAII,UAAU,GAAIV,KAAK,CAACS,OAAN,GAAgB,CAAjB,GAAsB,CAAtB,GAA0B,EAA3C;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAM,QAAA,EAAE,EAAC,qBAAT;AAAA,kBAAgCF,IAAI,CAACC,KAAL,CAAWE,UAAX;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA,mBACG,GADH,eAEE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAEP,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;AACF,CAxCD;;GAAMJ,qB;;KAAAA,qB;AA0CN,eAAeA,qBAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst TemperatureConversion = (props) => {\n  const [unit, setUnit] = useState(\"celsius\");\n\n  function showCelsius(event) {\n    event.preventDefault();\n    setUnit(\"celsius\");\n  }\n\n  function showFahrenheit(event) {\n    event.preventDefault();\n    setUnit(\"fahrenheit\");\n  }\n\n  if (unit === \"celsius\") {\n    return (\n      <div className=\"WeatherTemperature\">\n        <span id=\"current-temperature\">{Math.round(props.celsius)}</span>\n        <span className=\"unit-buttons\">\n          째C|\n          <a href=\"/\" onClick={showFahrenheit}>\n            째F\n          </a>\n        </span>\n      </div>\n    );\n  } else {\n    let fahrenheit = (props.celsius * 9) / 5 + 32;\n    return (\n      <div className=\"WeatherTemperature\">\n        <span id=\"current-temperature\">{Math.round(fahrenheit)}</span>\n        <span className=\"unit-buttons\">\n          {\" \"}\n          <a href=\"/\" onClick={showCelsius}>\n            째C\n          </a>\n          |째F\n        </span>\n      </div>\n    );\n  }\n};\n\nexport default TemperatureConversion;\n"]},"metadata":{},"sourceType":"module"}