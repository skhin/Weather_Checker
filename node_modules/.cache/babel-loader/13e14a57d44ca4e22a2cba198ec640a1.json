{"ast":null,"code":"var _jsxFileName = \"/Users/sireenakhin/Desktop/Weather_Checker/src/components/TemperatureConversion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TemperatureConversion = props => {\n  _s();\n\n  const [unit, setUnit] = useState(\"celcius\");\n\n  if (unit === \"celcius\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"temp\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [props.celcius, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unit\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          onClick: convertToC,\n          children: \"\\u2103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), \" \", \"|\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          onClick: convertToF,\n          children: \"\\u2109\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return \"F\";\n  }\n};\n\n_s(TemperatureConversion, \"7frUkdnei95Wh16SqMUJcaYO0Pc=\");\n\n_c = TemperatureConversion;\nexport default TemperatureConversion;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemperatureConversion\");","map":{"version":3,"sources":["/Users/sireenakhin/Desktop/Weather_Checker/src/components/TemperatureConversion.js"],"names":["React","useState","TemperatureConversion","props","unit","setUnit","celcius","convertToC","convertToF"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;AAAA;;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,SAAD,CAAhC;;AAEA,MAAIG,IAAI,KAAK,SAAb,EAAwB;AACtB,wBACE;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,+BACE;AAAA,qBAASD,KAAK,CAACG,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,gCACE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAEC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAGO,GAHP,OAII,GAJJ,eAKE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAEC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADF;AAgBD,GAjBD,MAiBO;AACL,WAAO,GAAP;AACD;AACF,CAvBD;;GAAMN,qB;;KAAAA,qB;AAyBN,eAAeA,qBAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst TemperatureConversion = (props) => {\n  const [unit, setUnit] = useState(\"celcius\");\n\n  if (unit === \"celcius\") {\n    return (\n      <>\n        <span className=\"temp\">\n          <strong>{props.celcius} </strong>\n        </span>\n        <span className=\"unit\">\n          <a href=\"/\" onClick={convertToC}>\n            ℃\n          </a>{\" \"}\n          |{\" \"}\n          <a href=\"/\" onClick={convertToF}>\n            ℉\n          </a>\n        </span>\n      </>\n    );\n  } else {\n    return \"F\";\n  }\n};\n\nexport default TemperatureConversion;\n"]},"metadata":{},"sourceType":"module"}