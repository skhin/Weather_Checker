{"ast":null,"code":"var _jsxFileName = \"/Users/sireenakhin/Desktop/Weather_Checker/src/components/WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ForecastDay from \"./ForecastDay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Forecast = props => {\n  _s();\n\n  const [ready, setReady] = useState(false);\n  const [forecastData, setForecastData] = useState(null);\n  useEffect(() => {\n    setReady(false);\n  }, [props.coords]);\n\n  function handleResponse(response) {\n    setForecastData(response.data.daily);\n    setReady(true);\n  }\n\n  function loadData() {\n    let lat = props.coords.lat;\n    let lon = props.coords.lon;\n    let apiKey = \"7e0a2a9bd62699b486b833f59a096759\";\n    let units = \"metric\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  if (ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ForecastWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecastData.map(function (dailyForecast, index) {\n          if (index > 0 && index < 6) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(ForecastDay, {\n                data: dailyForecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  } else {\n    loadData();\n    return null;\n  }\n};\n\n_s(Forecast, \"2te7gqN+DdMXXeKCu3f9KC6vdMI=\");\n\n_c = Forecast;\nexport default Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/Users/sireenakhin/Desktop/Weather_Checker/src/components/WeatherForecast.js"],"names":["React","useState","useEffect","axios","ForecastDay","Forecast","props","ready","setReady","forecastData","setForecastData","coords","handleResponse","response","data","daily","loadData","lat","lon","apiKey","units","apiUrl","get","then","map","dailyForecast","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAFQ,EAEN,CAACF,KAAK,CAACK,MAAP,CAFM,CAAT;;AAIA,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChCH,IAAAA,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAf;AACAP,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AAED,WAASQ,QAAT,GAAoB;AAClB,QAAIC,GAAG,GAAGX,KAAK,CAACK,MAAN,CAAaM,GAAvB;AACA,QAAIC,GAAG,GAAGZ,KAAK,CAACK,MAAN,CAAaO,GAAvB;AACA,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,KAAK,GAAG,QAAZ;AACA,QAAIC,MAAM,GAAI,uDAAsDJ,GAAI,QAAOC,GAAI,UAASC,MAAO,UAASC,KAAM,EAAlH;AAEAjB,IAAAA,KAAK,CAACmB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBX,cAAvB;AACD;;AAED,MAAIL,KAAJ,EAAW;AACT,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACGE,YAAY,CAACe,GAAb,CAAiB,UAAUC,aAAV,EAAyBC,KAAzB,EAAgC;AAChD,cAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;AAC1B,gCACE;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACE,QAAC,WAAD;AAAa,gBAAA,IAAI,EAAED;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF,eAA0BC,KAA1B;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WAND,MAMO;AACL,mBAAO,IAAP;AACD;AACF,SAVA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD,GAlBD,MAkBO;AACLV,IAAAA,QAAQ;AACR,WAAO,IAAP;AACD;AACF,CA7CD;;GAAMX,Q;;KAAAA,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ForecastDay from \"./ForecastDay\";\n\nconst Forecast = (props) => {\n  const [ready, setReady] = useState(false);\n  const [forecastData, setForecastData] = useState(null);\n\n  useEffect(() => {\n    setReady(false);\n  }, [props.coords]);\n\n  function handleResponse(response) {\n    setForecastData(response.data.daily);\n    setReady(true);\n  }\n\n  function loadData() {\n    let lat = props.coords.lat;\n    let lon = props.coords.lon;\n    let apiKey = \"7e0a2a9bd62699b486b833f59a096759\";\n    let units = \"metric\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  if (ready) {\n    return (\n      <div className=\"ForecastWrapper\">\n        <div className=\"row\">\n          {forecastData.map(function (dailyForecast, index) {\n            if (index > 0 && index < 6) {\n              return (\n                <div className=\"col\" key={index}>\n                  <ForecastDay data={dailyForecast} />\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    loadData();\n    return null;\n  }\n};\n\nexport default Forecast;\n"]},"metadata":{},"sourceType":"module"}