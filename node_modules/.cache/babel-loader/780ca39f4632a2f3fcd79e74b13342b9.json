{"ast":null,"code":"var _jsxFileName = \"/Users/sireenakhin/Desktop/Weather_Checker/src/components/WeatherTemperature.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherTemperature = props => {\n  _s();\n\n  // default state will be celsius\n  const [unit, setUnit] = useState(\"celsius\");\n\n  function showFahrenheit(event) {\n    event.preventDefault();\n    setUnit(\"fahrenheit\");\n  }\n\n  function showCelsius(event) {\n    event.preventDefault();\n    setUnit(\"celsius\");\n  }\n\n  function fahrenheit() {\n    return props.celsius * 9 / 5 + 32;\n  }\n\n  if (unit === \"celsius\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherTemperature\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"temperature\",\n        children: Math.round(props.celsius)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unit\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          onClick: showCelsius,\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), \" \", \"|\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          onClick: showFahrenheit,\n          children: \"\\xB0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherTemperature\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"temperature\",\n        children: Math.round(fahrenheit())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unit\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          onClick: showCelsius,\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), \" \", \"| \\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(WeatherTemperature, \"n67kjtGMfKwprJ+mcpfrwxWUTPs=\");\n\n_c = WeatherTemperature;\nexport default WeatherTemperature;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherTemperature\");","map":{"version":3,"sources":["/Users/sireenakhin/Desktop/Weather_Checker/src/components/WeatherTemperature.js"],"names":["React","useState","WeatherTemperature","props","unit","setUnit","showFahrenheit","event","preventDefault","showCelsius","fahrenheit","celsius","Math","round"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAAA;;AACpC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,SAAD,CAAhC;;AACA,WAASK,cAAT,CAAwBC,KAAxB,EAA+B;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,OAAO,CAAC,YAAD,CAAP;AACD;;AAED,WAASI,WAAT,CAAqBF,KAArB,EAA4B;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,OAAO,CAAC,SAAD,CAAP;AACD;;AAED,WAASK,UAAT,GAAsB;AACpB,WAAQP,KAAK,CAACQ,OAAN,GAAgB,CAAjB,GAAsB,CAAtB,GAA0B,EAAjC;AACD;;AAED,MAAIP,IAAI,KAAK,SAAb,EAAwB;AACtB,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,kBAA+BQ,IAAI,CAACC,KAAL,CAAWV,KAAK,CAACQ,OAAjB;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,gCACE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAEF,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAGO,GAHP,OAII,GAJJ,eAKE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAEH,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD,GAfD,MAeO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,kBAA+BM,IAAI,CAACC,KAAL,CAAWH,UAAU,EAArB;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,gCACE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAED,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAGO,GAHP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;AACF,CA7CD;;GAAMP,kB;;KAAAA,kB;AA+CN,eAAeA,kBAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst WeatherTemperature = (props) => {\n  // default state will be celsius\n  const [unit, setUnit] = useState(\"celsius\");\n  function showFahrenheit(event) {\n    event.preventDefault();\n    setUnit(\"fahrenheit\");\n  }\n\n  function showCelsius(event) {\n    event.preventDefault();\n    setUnit(\"celsius\");\n  }\n\n  function fahrenheit() {\n    return (props.celsius * 9) / 5 + 32;\n  }\n\n  if (unit === \"celsius\") {\n    return (\n      <div className=\"WeatherTemperature\">\n        <span className=\"temperature\">{Math.round(props.celsius)}</span>\n        <span className=\"unit\">\n          <a href=\"/\" onClick={showCelsius}>\n            째C\n          </a>{\" \"}\n          |{\" \"}\n          <a href=\"/\" onClick={showFahrenheit}>\n            째F\n          </a>\n        </span>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"WeatherTemperature\">\n        <span className=\"temperature\">{Math.round(fahrenheit())}</span>\n        <span className=\"unit\">\n          <a href=\"/\" onClick={showCelsius}>\n            째C\n          </a>{\" \"}\n          | 째F\n        </span>\n      </div>\n    );\n  }\n};\n\nexport default WeatherTemperature;\n"]},"metadata":{},"sourceType":"module"}