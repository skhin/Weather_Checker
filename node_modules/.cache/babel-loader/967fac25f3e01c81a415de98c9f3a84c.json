{"ast":null,"code":"import * as weatherTypes from \"./weather-type\";\n\nconst weatherReducer = (state, action) => {\n  switch (action.type) {\n    case weatherTypes.DEFAULT_WEATHER:\n      return { ...state,\n        weather: action.payload\n      };\n\n    case weatherTypes.FORECAST:\n      const {\n        id,\n        data\n      } = action.payload;\n      return { ...state,\n        forecast: {\n          id,\n          data\n        }\n      };\n\n    case weatherTypes.SEARCH_CITY:\n      return { ...state,\n        weather: [action.payload, ...state.weather]\n      };\n\n    case weatherTypes.REMOVE_WEATHER:\n      return { ...state,\n        weather: state.weather.filter(item => item.id !== action.payload),\n        forecast: state.forecast.id === action.payload ? [] : state.forecast\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default weatherReducer;","map":{"version":3,"sources":["/Users/sireenakhin/Desktop/Weather_Checker/src/context/weather-reducer.js"],"names":["weatherTypes","weatherReducer","state","action","type","DEFAULT_WEATHER","weather","payload","FORECAST","id","data","forecast","SEARCH_CITY","REMOVE_WEATHER","filter","item"],"mappings":"AAAA,OAAO,KAAKA,YAAZ,MAA8B,gBAA9B;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,YAAY,CAACK,eAAlB;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,OAAO,EAAEH,MAAM,CAACI;AAFX,OAAP;;AAKF,SAAKP,YAAY,CAACQ,QAAlB;AACE,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA;AAAN,UAAeP,MAAM,CAACI,OAA5B;AACA,aAAO,EACL,GAAGL,KADE;AAGLS,QAAAA,QAAQ,EAAE;AAAEF,UAAAA,EAAF;AAAMC,UAAAA;AAAN;AAHL,OAAP;;AAMF,SAAKV,YAAY,CAACY,WAAlB;AACE,aAAO,EACL,GAAGV,KADE;AAELI,QAAAA,OAAO,EAAE,CAACH,MAAM,CAACI,OAAR,EAAiB,GAAGL,KAAK,CAACI,OAA1B;AAFJ,OAAP;;AAKF,SAAKN,YAAY,CAACa,cAAlB;AACE,aAAO,EACL,GAAGX,KADE;AAELI,QAAAA,OAAO,EAAEJ,KAAK,CAACI,OAAN,CAAcQ,MAAd,CAAsBC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYN,MAAM,CAACI,OAAlD,CAFJ;AAGLI,QAAAA,QAAQ,EAAET,KAAK,CAACS,QAAN,CAAeF,EAAf,KAAsBN,MAAM,CAACI,OAA7B,GAAuC,EAAvC,GAA4CL,KAAK,CAACS;AAHvD,OAAP;;AAKF;AACE,aAAOT,KAAP;AA5BJ;AA8BD,CA/BD;;AAiCA,eAAeD,cAAf","sourcesContent":["import * as weatherTypes from \"./weather-type\";\n\nconst weatherReducer = (state, action) => {\n  switch (action.type) {\n    case weatherTypes.DEFAULT_WEATHER:\n      return {\n        ...state,\n        weather: action.payload,\n      };\n\n    case weatherTypes.FORECAST:\n      const { id, data } = action.payload;\n      return {\n        ...state,\n\n        forecast: { id, data },\n      };\n\n    case weatherTypes.SEARCH_CITY:\n      return {\n        ...state,\n        weather: [action.payload, ...state.weather],\n      };\n\n    case weatherTypes.REMOVE_WEATHER:\n      return {\n        ...state,\n        weather: state.weather.filter((item) => item.id !== action.payload),\n        forecast: state.forecast.id === action.payload ? [] : state.forecast,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default weatherReducer;\n"]},"metadata":{},"sourceType":"module"}