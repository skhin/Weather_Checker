{"ast":null,"code":"var _jsxFileName = \"/Users/sireenakhin/Desktop/Weather_Checker/src/components/FormatDate.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormatDate = props => {\n  console.log(props.date);\n  const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  let day = days[props.date.getDay()];\n  let minutes = props.date.getMinutes();\n\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  let hours = props.date.getHours();\n\n  if (hours < 10) {\n    hours = `0${hours}`;\n  } else if (hours > 12 && hours < 24) {\n    hours = hours - 12;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-date\",\n      children: [day, \",\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-time\",\n      children: [hours, \".\", minutes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = FormatDate;\nexport default FormatDate;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormatDate\");","map":{"version":3,"sources":["/Users/sireenakhin/Desktop/Weather_Checker/src/components/FormatDate.js"],"names":["React","FormatDate","props","console","log","date","days","day","getDay","minutes","getMinutes","hours","getHours"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB;AAEA,QAAMC,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAAb;AACA,MAAIC,GAAG,GAAGD,IAAI,CAACJ,KAAK,CAACG,IAAN,CAAWG,MAAX,EAAD,CAAd;AAEA,MAAIC,OAAO,GAAGP,KAAK,CAACG,IAAN,CAAWK,UAAX,EAAd;;AACA,MAAID,OAAO,GAAG,EAAd,EAAkB;AAChBA,IAAAA,OAAO,GAAI,IAAGA,OAAQ,EAAtB;AACD;;AAED,MAAIE,KAAK,GAAGT,KAAK,CAACG,IAAN,CAAWO,QAAX,EAAZ;;AACA,MAAID,KAAK,GAAG,EAAZ,EAAgB;AACdA,IAAAA,KAAK,GAAI,IAAGA,KAAM,EAAlB;AACD,GAFD,MAEO,IAAIA,KAAK,GAAG,EAAR,IAAcA,KAAK,GAAG,EAA1B,EAA8B;AACnCA,IAAAA,KAAK,GAAGA,KAAK,GAAG,EAAhB;AACD;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBAA4BJ,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACGI,KADH,OACWF,OADX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAQD,CA1BD;;KAAMR,U;AA4BN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\n\nconst FormatDate = (props) => {\n  console.log(props.date);\n\n  const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  let day = days[props.date.getDay()];\n\n  let minutes = props.date.getMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  let hours = props.date.getHours();\n  if (hours < 10) {\n    hours = `0${hours}`;\n  } else if (hours > 12 && hours < 24) {\n    hours = hours - 12;\n  }\n\n  return (\n    <>\n      <div className=\"city-date\">{day},</div>\n      <div className=\"city-time\">\n        {hours}.{minutes}\n      </div>\n    </>\n  );\n};\n\nexport default FormatDate;\n"]},"metadata":{},"sourceType":"module"}