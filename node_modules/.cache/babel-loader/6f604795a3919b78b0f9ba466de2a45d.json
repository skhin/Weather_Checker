{"ast":null,"code":"var _jsxFileName = \"/Users/sireenakhin/Desktop/Weather_Checker/src/components/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Weather = () => {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({});\n  const [ready, setReady] = useState(false);\n\n  function handleResponse(response) {\n    console.log(response.data);\n    setWeatherData({\n      temperature: Math.round(response.data.main.temp),\n      city: response.data.name,\n      description: response.data.weather[0].description,\n      sunrise: response.data.sys.sunrise,\n      sunset: response.data.sys.sunset,\n      date: \"Sat, Dec 11\"\n    });\n    setReady(true);\n  }\n\n  if (ready) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        defaultCity: \"Singapore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container default-city\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row align-items-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: weatherData.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"city-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"city-date\",\n                children: [\"Sat, \", weatherData.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"city-time\",\n                children: \"12.09am\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"city-desc\",\n                children: weatherData.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6 icon-img\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"https://ssl.gstatic.com/onebox/weather/64/partly_cloudy.png\",\n                  alt: \"Mostly Cloudy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"temp\",\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [weatherData.temperature, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"unit\",\n                  children: \"\\u2103\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"sun-times\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"\\uD83C\\uDF05 Sunrise: \", weatherData.sunrise, \"am\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"\\uD83C\\uDF07 Sunset: \", weatherData.sunset, \"pm\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"FORECAST\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"REMOVE CITY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    const city = \"Singapore\";\n    const apiKey = \"7e0a2a9bd62699b486b833f59a096759\";\n    const apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return \"Please hold. Page is Loading ....\";\n  }\n};\n\n_s(Weather, \"DsHTpdcoeevRaosA1ep+3PGq0Ic=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/sireenakhin/Desktop/Weather_Checker/src/components/Weather.js"],"names":["React","useState","axios","Search","Weather","weatherData","setWeatherData","ready","setReady","handleResponse","response","console","log","data","temperature","Math","round","main","temp","city","name","description","weather","sunrise","sys","sunset","date","apiKey","apiUrl","get","then"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Search from \"./Search\";\n\nconst Weather = () => {\n  const [weatherData, setWeatherData] = useState({});\n  const [ready, setReady] = useState(false);\n\n  function handleResponse(response) {\n    console.log(response.data);\n    setWeatherData({\n      temperature: Math.round(response.data.main.temp),\n      city: response.data.name,\n      description: response.data.weather[0].description,\n      sunrise: response.data.sys.sunrise,\n      sunset: response.data.sys.sunset,\n      date: \"Sat, Dec 11\",\n    });\n\n    setReady(true);\n  }\n\n  if (ready) {\n    return (\n      <>\n        <Search defaultCity=\"Singapore\" />\n        <br />\n        <div className=\"container default-city\">\n          <div className=\"row align-items-start\">\n            <div className=\"col-md-6\">\n              <h2>{weatherData.city}</h2>\n              <ul className=\"city-list\">\n                <li className=\"city-date\">Sat, {weatherData.date}</li>\n                <li className=\"city-time\">12.09am</li>\n                <li className=\"city-desc\">{weatherData.description}</li>\n              </ul>\n              <div className=\"row\">\n                <div className=\"col-6 icon-img\">\n                  <img\n                    src=\"https://ssl.gstatic.com/onebox/weather/64/partly_cloudy.png\"\n                    alt=\"Mostly Cloudy\"\n                  />\n                  <span className=\"temp\">\n                    <strong>{weatherData.temperature} </strong>\n                  </span>\n                  <span className=\"unit\">℃</span>\n                  <br />\n\n                  <ul className=\"sun-times\">\n                    <li>🌅 Sunrise: {weatherData.sunrise}am</li>\n                    <li>🌇 Sunset: {weatherData.sunset}pm</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <button>FORECAST</button>\n            <button>REMOVE CITY</button>\n          </div>\n        </div>\n      </>\n    );\n  } else {\n    const city = \"Singapore\";\n    const apiKey = \"7e0a2a9bd62699b486b833f59a096759\";\n    const apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n\n    return \"Please hold. Page is Loading ....\";\n  }\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}