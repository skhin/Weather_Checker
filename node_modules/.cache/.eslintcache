[{"/Users/sireenakhin/Desktop/GA Study Guide/Unit 2/react-d1/src/index.js":"1","/Users/sireenakhin/Desktop/GA Study Guide/Unit 2/react-d1/src/App.js":"2","/Users/sireenakhin/Desktop/Weather_Checker/src/index.js":"3","/Users/sireenakhin/Desktop/Weather_Checker/src/App.js":"4","/Users/sireenakhin/Desktop/Weather_Checker/src/components/WeatherInfo.js":"5","/Users/sireenakhin/Desktop/Weather_Checker/src/components/WeatherTemperature.js":"6","/Users/sireenakhin/Desktop/Weather_Checker/src/components/FormattedDate.js":"7","/Users/sireenakhin/Desktop/Weather_Checker/src/components/Header.js":"8","/Users/sireenakhin/Desktop/Weather_Checker/src/components/SearchForm.js":"9","/Users/sireenakhin/Desktop/Weather_Checker/src/components/Forecast.js":"10","/Users/sireenakhin/Desktop/Weather_Checker/src/components/context/weather-context.js":"11","/Users/sireenakhin/Desktop/Weather_Checker/src/components/ForecastCard.js":"12","/Users/sireenakhin/Desktop/Weather_Checker/src/components/WeatherInfoCard.js":"13"},{"size":142,"mtime":1616592305000,"results":"14","hashOfConfig":"15"},{"size":130,"mtime":1637546832000,"results":"16","hashOfConfig":"15"},{"size":142,"mtime":1616592305000,"results":"17","hashOfConfig":"18"},{"size":372,"mtime":1639537358601,"results":"19","hashOfConfig":"18"},{"size":1991,"mtime":1639537268092,"results":"20","hashOfConfig":"18"},{"size":1187,"mtime":1639444974397,"results":"21","hashOfConfig":"18"},{"size":986,"mtime":1639381650343,"results":"22","hashOfConfig":"18"},{"size":165,"mtime":1639531950661,"results":"23","hashOfConfig":"18"},{"size":1945,"mtime":1639533618879,"results":"24","hashOfConfig":"18"},{"size":591,"mtime":1639536045469,"results":"25","hashOfConfig":"18"},{"size":112,"mtime":1639532239403,"results":"26","hashOfConfig":"18"},{"size":516,"mtime":1639535174400,"results":"27","hashOfConfig":"18"},{"size":1938,"mtime":1639535980820,"results":"28","hashOfConfig":"18"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"35udqa",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1d6nagr",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sireenakhin/Desktop/GA Study Guide/Unit 2/react-d1/src/index.js",[],"/Users/sireenakhin/Desktop/GA Study Guide/Unit 2/react-d1/src/App.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/index.js",[],["58","59"],"/Users/sireenakhin/Desktop/Weather_Checker/src/App.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/components/WeatherInfo.js",["60","61"],"import React, { useEffect, useState, useContext } from \"react\";\nimport WeatherInfoCard from \"./WeatherInfoCard\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport weatherContext from \"./context/weather-context\";\n\nconst defaultCity = [\"Singapore\", \"Brisbane\", \"Brno\"];\n\nconst WeatherInfo = () => {\n  const [storeData, setStoreData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { weather, actionDefaultWeather } = useContext(weatherContext);\n\n  const ApiKey = process.env.REACT_APP_API_KEY;\n\n  const fetchApi = async (dcity) => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${dcity}&units=metric&appid=${ApiKey}`\n      );\n      const res = await axios.get(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${response.data.city.coord.lat}&lon=${response.data.city.coord.lon}&exclude=minutely,hourly&units=metric&appid=${ApiKey}`\n      );\n\n      const { dt, weather, temp, sunrise, sunset } = res.data.current;\n\n      const currentData = {\n        id: new Date().getTime(),\n        cityName: dcity,\n        date: moment(dt * 1000).format(\"ddd, D MMM\"),\n        time: dt,\n        cond: weather[0].main,\n        icon: weather[0].icon,\n        temp,\n        sunrise: sunrise,\n        sunset: sunset,\n        forecast: res.data.daily.slice(1, 6),\n      };\n      setStoreData((preValue) => [...preValue, currentData]);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    defaultCity.map((dcity) => fetchApi(dcity));\n  }, []);\n\n  useEffect(() => {\n    actionDefaultWeather(storeData);\n  }, [storeData]);\n\n  return (\n    <div className=\"weather_info\">\n      {isLoading ? (\n        <h3>Loading...</h3>\n      ) : (\n        weather.map((weather, ind) => (\n          <WeatherInfoCard key={ind} weather={weather} />\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default WeatherInfo;\n","/Users/sireenakhin/Desktop/Weather_Checker/src/components/WeatherTemperature.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/components/FormattedDate.js",[],["62","63"],"/Users/sireenakhin/Desktop/Weather_Checker/src/components/Header.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/components/SearchForm.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/components/Forecast.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/components/context/weather-context.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/components/ForecastCard.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/components/WeatherInfoCard.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":51,"column":6,"nodeType":"70","endLine":51,"endColumn":8,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"72","line":55,"column":6,"nodeType":"70","endLine":55,"endColumn":17,"suggestions":"73"},{"ruleId":"64","replacedBy":"74"},{"ruleId":"66","replacedBy":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchApi'. Either include it or remove the dependency array.","ArrayExpression",["78"],"React Hook useEffect has a missing dependency: 'actionDefaultWeather'. Either include it or remove the dependency array.",["79"],["76"],["77"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [fetchApi]",{"range":"84","text":"85"},"Update the dependencies array to be: [actionDefaultWeather, storeData]",{"range":"86","text":"87"},[1635,1637],"[fetchApi]",[1703,1714],"[actionDefaultWeather, storeData]"]