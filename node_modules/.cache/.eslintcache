[{"/Users/sireenakhin/Desktop/GA Study Guide/Unit 2/react-d1/src/index.js":"1","/Users/sireenakhin/Desktop/GA Study Guide/Unit 2/react-d1/src/App.js":"2","/Users/sireenakhin/Desktop/Weather_Checker/src/index.js":"3","/Users/sireenakhin/Desktop/Weather_Checker/src/App.js":"4","/Users/sireenakhin/Desktop/Weather_Checker/src/components/WeatherInfo.js":"5","/Users/sireenakhin/Desktop/Weather_Checker/src/components/WeatherTemperature.js":"6","/Users/sireenakhin/Desktop/Weather_Checker/src/components/Header.js":"7","/Users/sireenakhin/Desktop/Weather_Checker/src/components/SearchForm.js":"8","/Users/sireenakhin/Desktop/Weather_Checker/src/components/Forecast.js":"9","/Users/sireenakhin/Desktop/Weather_Checker/src/components/ForecastCard.js":"10","/Users/sireenakhin/Desktop/Weather_Checker/src/components/WeatherInfoCard.js":"11","/Users/sireenakhin/Desktop/Weather_Checker/src/context/weather-context.js":"12","/Users/sireenakhin/Desktop/Weather_Checker/src/context/WeatherState.js":"13","/Users/sireenakhin/Desktop/Weather_Checker/src/context/weather-reducer.js":"14","/Users/sireenakhin/Desktop/Weather_Checker/src/context/weather-type.js":"15","/Users/sireenakhin/Desktop/Weather_Checker/src/components/FormattedDate.js":"16"},{"size":142,"mtime":1616592305000,"results":"17","hashOfConfig":"18"},{"size":130,"mtime":1637546832000,"results":"19","hashOfConfig":"18"},{"size":237,"mtime":1639539590087,"results":"20","hashOfConfig":"21"},{"size":400,"mtime":1639622023297,"results":"22","hashOfConfig":"21"},{"size":2054,"mtime":1639572843433,"results":"23","hashOfConfig":"21"},{"size":1237,"mtime":1639542498936,"results":"24","hashOfConfig":"21"},{"size":165,"mtime":1639531950661,"results":"25","hashOfConfig":"21"},{"size":1979,"mtime":1639571658446,"results":"26","hashOfConfig":"21"},{"size":594,"mtime":1639540991197,"results":"27","hashOfConfig":"21"},{"size":495,"mtime":1639539903482,"results":"28","hashOfConfig":"21"},{"size":2099,"mtime":1639572693624,"results":"29","hashOfConfig":"21"},{"size":112,"mtime":1639539358614,"results":"30","hashOfConfig":"21"},{"size":1226,"mtime":1639542965457,"results":"31","hashOfConfig":"21"},{"size":822,"mtime":1639539373103,"results":"32","hashOfConfig":"21"},{"size":176,"mtime":1639532297788,"results":"33","hashOfConfig":"21"},{"size":931,"mtime":1639555826548,"results":"34","hashOfConfig":"21"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"35udqa",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1d6nagr",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/Users/sireenakhin/Desktop/GA Study Guide/Unit 2/react-d1/src/index.js",[],"/Users/sireenakhin/Desktop/GA Study Guide/Unit 2/react-d1/src/App.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/index.js",[],["70","71"],"/Users/sireenakhin/Desktop/Weather_Checker/src/App.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/components/WeatherInfo.js",["72","73"],"import React, { useEffect, useState, useContext } from \"react\";\nimport WeatherInfoCard from \"./WeatherInfoCard\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport WeatherContext from \"../context/weather-context\";\n\nconst defaultCity = [\"Singapore\", \"Brisbane\", \"Prague\"];\n\nconst WeatherInfo = () => {\n  const [storeData, setStoreData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { weather, actionDefaultWeather } = useContext(WeatherContext);\n\n  const ApiKey = process.env.REACT_APP_API_KEY;\n\n  const fetchApi = async (dcity) => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${dcity}&units=metric&appid=${ApiKey}`\n      );\n      const res = await axios.get(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${response.data.city.coord.lat}&lon=${response.data.city.coord.lon}&exclude=minutely,hourly&units=metric&appid=${ApiKey}`\n      );\n\n      console.log(\"res  \", res);\n\n      const { dt, weather, temp, sunrise, sunset } = res.data.current;\n\n      const currentData = {\n        id: new Date().getTime(),\n        cityName: dcity,\n        date: moment(dt * 1000).format(\"ddd, D MMM\"),\n        time: dt,\n        cond: weather[0].main,\n        icon: weather[0].icon,\n        temp: temp,\n        sunrise: sunrise,\n        sunset: sunset,\n        forecast: res.data.daily.slice(1, 6),\n      };\n      setStoreData((preValue) => [...preValue, currentData]);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    defaultCity.forEach((dcity) => {\n      fetchApi(dcity);\n    });\n  }, []);\n\n  useEffect(() => {\n    actionDefaultWeather(storeData);\n  }, [storeData]);\n\n  return (\n    <div className=\"weather_info\">\n      {isLoading ? (\n        <h3>Loading...</h3>\n      ) : (\n        weather.map((weather, ind) => (\n          <WeatherInfoCard key={ind} weather={weather} />\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default WeatherInfo;\n","/Users/sireenakhin/Desktop/Weather_Checker/src/components/WeatherTemperature.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/components/Header.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/components/SearchForm.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/components/Forecast.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/components/ForecastCard.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/components/WeatherInfoCard.js",["74"],"import moment from \"moment\";\nimport React, { useContext } from \"react\";\nimport WeatherContext from \"../context/weather-context\";\nimport WeatherTemperature from \"./WeatherTemperature\";\nimport FormattedDate from \"./FormattedDate\";\n\nconst WeatherInfoCard = ({ weather }) => {\n  const { forecast, actionForecast, actionRemoveWeather } =\n    useContext(WeatherContext);\n\n  const targetBody = document.querySelector(\"body\");\n\n  const handleForecast = (weather) => {\n    actionForecast(weather.id, weather.forecast);\n    if (\n      weather.time * 1000 >= weather.sunrise * 1000 &&\n      weather.time * 1000 <= weather.sunset * 1000\n    ) {\n      targetBody.style.color = \"#164785\";\n      targetBody.style.background =\n        \"linear-gradient(178deg, rgba(201, 234, 252, 0.51) 14.9%, rgba(139, 192, 216, 0.73) 80%)\";\n    } else {\n      targetBody.style.color = \"whitesmoke\";\n      targetBody.style.background =\n        \"linear-gradient(112.1deg, rgb(32, 38, 57) 11.4%, rgb(63, 76, 119) 70.2%)\";\n    }\n  };\n  console.log(weather);\n\n  return (\n    <div classname=\"weatherinfo-card\">\n      <div\n        className={`${\n          forecast.id === weather.id ? \"weather_card active\" : \"weather_card\"\n        }`}\n      >\n        <h1>{weather.cityName}</h1>\n        {/* <p>\n          <FormattedDate date={weather} />\n        </p> */}\n        <p>{weather.date}</p>\n        <p>{moment(weather.time * 1000).format(\"h:mm a\")}</p>\n        <p>{weather.cond}</p>\n\n        <div className=\"icon_temp\">\n          <img\n            src={`http://openweathermap.org/img/w/${weather.icon}.png`}\n            alt=\"icon\"\n          />\n          <span>\n            <WeatherTemperature celsius={weather.temp} />\n          </span>\n        </div>\n        <br />\n        <p>ðŸŒ… Sunrise: {moment(weather.sunrise * 1000).format(\"h:mm a\")}</p>\n        <p>ðŸŒ‡ Sunset: {moment(weather.sunset * 1000).format(\"h:mm a\")}</p>\n\n        <button onClick={() => handleForecast(weather)}>Forecast</button>\n        <button onClick={() => actionRemoveWeather(weather.id)}>Remove</button>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherInfoCard;\n","/Users/sireenakhin/Desktop/Weather_Checker/src/context/weather-context.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/context/WeatherState.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/context/weather-reducer.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/context/weather-type.js",[],"/Users/sireenakhin/Desktop/Weather_Checker/src/components/FormattedDate.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":56,"column":6,"nodeType":"81","endLine":56,"endColumn":8,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":60,"column":6,"nodeType":"81","endLine":60,"endColumn":17,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":5,"column":8,"nodeType":"87","messageId":"88","endLine":5,"endColumn":21},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchApi'. Either include it or remove the dependency array.","ArrayExpression",["91"],"React Hook useEffect has a missing dependency: 'actionDefaultWeather'. Either include it or remove the dependency array.",["92"],"no-unused-vars","'FormattedDate' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [fetchApi]",{"range":"97","text":"98"},"Update the dependencies array to be: [actionDefaultWeather, storeData]",{"range":"99","text":"100"},[1698,1700],"[fetchApi]",[1766,1777],"[actionDefaultWeather, storeData]"]